(()=>{"use strict";var __webpack_modules__={902:()=>{eval("\n;// CONCATENATED MODULE: ./ts/modules/game_init.ts\n// Глобальная функция инициализации (настройка игры перед началом)\nvar gameInit = function () {\n    // Основной объект состояния инициализации игры\n    var initState = {\n        isGameStarted: false,\n        playersNumber: 1,\n        avatarMode: 'classic_mode',\n        gameMode: 0,\n        players: {\n            player_1: {\n                isActive: true,\n                name: 'Игрок 1',\n                avatarIndex: 0,\n                time: 0,\n                score: 0,\n            },\n            player_2: {\n                isActive: true,\n                name: 'Игрок 1',\n                avatarIndex: 0,\n                time: 0,\n                score: 0,\n            },\n            player_3: {\n                isActive: false,\n                name: 'Игрок 1',\n                avatarIndex: 0,\n                time: 0,\n                score: 0,\n            },\n            player_4: {\n                isActive: false,\n                name: 'Игрок 1',\n                avatarIndex: 0,\n                time: 0,\n                score: 0,\n            },\n        },\n    };\n    // UI элементы на странице\n    var htmlElements = {\n        headerInit: document.querySelector('.header_init'),\n        headerGame: document.querySelector('.header_game'),\n        buttonStartGame: document.getElementById('btn_gameStart'),\n        selectPlayersNumber: document.getElementById('select_playersNumber'),\n        selectAvatarMode: document.getElementById('select_avatarMode'),\n        selectScoreMode: document.getElementById('select_scoreMode'),\n        playerName1: document.getElementById('player_1_name'),\n        playerName2: document.getElementById('player_2_name'),\n        playerName3: document.getElementById('player_3_name'),\n        playerName4: document.getElementById('player_4_name'),\n    };\n    // Инициализация const значений (settings)\n    var settings = {\n        avatarModes: ['classic_mode', 'art_mode', 'anime_mode'],\n    };\n    // Инициализация var значений (properties)\n    var properties = {};\n    // Инициализация function значений (methods)\n    var methods = {\n        showState: function () {\n            console.log((new Date).toString().slice(16, 24));\n            console.log(methods.getState());\n        },\n        // setState: (property: string, value: any) => {\n        //   type stateKeyType = keyof typeof initState\n        //   for (let key in initState) {\n        //     if (key === property) {\n        //       console.log(`Before: initState.${property} :  ${initState[key as stateKeyType]}`)\n        //       initState[key as stateKeyType] = value\n        //       console.log(typeof initState[key as stateKeyType])\n        //       console.log(`After: initState.${property} :  ${initState[key as stateKeyType]}`)\n        //     };\n        //   }\n        //   localStorage.setItem('state', JSON.stringify(initState));\n        //   methods.showState()\n        // },\n        setState: function () {\n            localStorage.setItem('state', JSON.stringify(initState));\n            methods.showState();\n        },\n        getState: function () {\n            return JSON.parse(localStorage.getItem('state'));\n        },\n        gameInit: function () {\n            methods.bindListeners();\n            // methods.setState(initState)\n        },\n        bindListeners: function () {\n            htmlElements.buttonStartGame.addEventListener('click', methods.startTheGame);\n            htmlElements.selectPlayersNumber.addEventListener('change', methods.changePlayersNumber);\n            htmlElements.selectAvatarMode.addEventListener('change', methods.changeAvatarIndex);\n            htmlElements.selectScoreMode.addEventListener('change', methods.changeScoreMode);\n            htmlElements.playerName1.addEventListener('change', methods.changePlayerName);\n            htmlElements.playerName2.addEventListener('change', methods.changePlayerName);\n            htmlElements.playerName3.addEventListener('change', methods.changePlayerName);\n            htmlElements.playerName4.addEventListener('change', methods.changePlayerName);\n        },\n        changePlayerName: function () {\n            // const player = this.id.slice(0,8)\n            // console.log(player)\n        },\n        startTheGame: function () {\n            htmlElements.headerInit.classList.add('hidden');\n            htmlElements.headerGame.classList.remove('hidden');\n            initState.isGameStarted = true;\n            // methods.setState(initState);\n        },\n        changePlayersNumber: function () {\n            // methods.setState('playersNumber', parseInt(htmlElements.selectPlayersNumber.value) as number);\n            initState.playersNumber = parseInt(htmlElements.selectPlayersNumber.value);\n            methods.setState();\n        },\n        changeAvatarIndex: function () {\n            initState.avatarMode = settings.avatarModes[parseInt(htmlElements.selectAvatarMode.value)];\n            // methods.setState(initState);\n        },\n        changeScoreMode: function () {\n            initState.gameMode = parseInt(htmlElements.selectScoreMode.value);\n            // methods.setState(initState);\n        }\n    };\n    //Поiхалы\n    methods.gameInit();\n    // Меняем initState при изменении количества игроков, мода аватаров, режима игры (очков), а также при смене аватаров и имен игроков\n    // Каждый раз при смене initState у нас происходит ререндер аватарок и иконок\n    // Инициализация:\n    // Записываем в localstorage\n    // Обновляем: забираем из localstorage и рендерим \n    // При любом чихе: запись в localstorage / читаем / рендерим\n};\n\n\n;// CONCATENATED MODULE: ./ts/index.ts\n\n// import '../styles/bootstrap.css'\n// import {PlayerInfo, GameState} from './modules/interfaces';\n\ngameInit();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///902\n")}},__webpack_exports__={};__webpack_modules__[902]()})();